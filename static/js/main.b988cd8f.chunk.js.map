{"version":3,"sources":["components/Table.jsx","api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["QUERY","Table","products","query","setQuery","sortedProducts","structuredClone","Object","keys","length","entries","property","key","value","sort","a","b","id","user","name","localeCompare","category","title","sorter","className","href","onClick","cn","map","product","icon","sex","ownerId","productsPrepared","categoryId","categoriesFromServer","find","cat","usersFromServer","person","App","useState","selectedUserId","setselectedUserId","inputValue","setInputValue","selectedCategories","setSelectedCategories","productsToRender","filteredProducts","filter","lowerInputValue","toLowerCase","trim","includes","productFilter","type","placeholder","onChange","target","catId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b988cd8f.chunk.js","sourcesContent":["import cn from 'classnames';\n// import { useState } from 'react';\n\nconst QUERY = {\n  ID: 'ID',\n  PRODUCT: 'PRODUCT',\n  CATEGORY: 'CATEGORY',\n  USER: 'USER',\n};\n\nconst sorter = (products, query) => {\n  const sortedProducts = structuredClone(products);\n\n  if (!Object.keys(query).length) {\n    return sortedProducts;\n  }\n\n  const [property] = Object.entries(query);\n  const [key, value] = property;\n\n  switch (key) {\n    case QUERY.ID:\n      sortedProducts.sort((a, b) => (\n        value === 'ASC'\n          ? a.id - b.id\n          : b.id - a.id\n      ));\n      break;\n\n    case QUERY.USER:\n      sortedProducts.sort((a, b) => (\n        value === 'ASC'\n          ? a.user.name.localeCompare(b.user.name)\n          : b.user.name.localeCompare(a.user.name)\n      ));\n      break;\n\n    case QUERY.CATEGORY:\n      sortedProducts.sort((a, b) => (\n        value === 'ASC'\n          ? a.category.title.localeCompare(b.category.title)\n          : b.category.title.localeCompare(a.category.title)\n      ));\n      break;\n\n    case QUERY.PRODUCT:\n      sortedProducts.sort((a, b) => (\n        value === 'ASC'\n          ? a.name.localeCompare(b.name)\n          : b.name.localeCompare(a.name)\n      ));\n      break;\n\n    default:\n      return sortedProducts;\n  }\n\n  return sortedProducts;\n};\n\nexport const Table = ({ products, query, setQuery }) => {\n  // const [query, setQuery] = useState({});\n\n  const sortedProducts = sorter(products, query);\n\n  return (\n    <table\n      data-cy=\"ProductTable\"\n      className=\"table is-striped is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              ID\n\n              <a\n                href=\"#/\"\n                onClick={() => setQuery(() => {\n                  if (query[QUERY.ID] === 'DESC') {\n                    return {};\n                  }\n\n                  return ({\n                    [QUERY.ID]: query[QUERY.ID] ? 'DESC' : 'ASC',\n                  });\n                })}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn(\n                      'fas',\n                      {\n                        'fas fa-sort': !query[QUERY.ID],\n                        'fas fa-sort-down': query[QUERY.ID] === 'DESC',\n                        'fas fa-sort-up': query[QUERY.ID] === 'ASC',\n                      },\n                    )}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Product\n\n              <a\n                href=\"#/\"\n                onClick={() => setQuery(() => {\n                  if (query[QUERY.PRODUCT] === 'DESC') {\n                    return {};\n                  }\n\n                  return ({\n                    [QUERY.PRODUCT]: query[QUERY.PRODUCT] ? 'DESC' : 'ASC',\n                  });\n                })}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn(\n                      'fas',\n                      {\n                        'fas fa-sort': !query[QUERY.PRODUCT],\n                        'fas fa-sort-down': query[QUERY.PRODUCT] === 'DESC',\n                        'fas fa-sort-up': query[QUERY.PRODUCT] === 'ASC',\n                      },\n                    )}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Category\n\n              <a\n                href=\"#/\"\n                onClick={() => setQuery(() => {\n                  if (query[QUERY.CATEGORY] === 'DESC') {\n                    return {};\n                  }\n\n                  return ({\n                    [QUERY.CATEGORY]: query[QUERY.CATEGORY] ? 'DESC' : 'ASC',\n                  });\n                })}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn(\n                      'fas',\n                      {\n                        'fas fa-sort': !query[QUERY.CATEGORY],\n                        'fas fa-sort-down': query[QUERY.CATEGORY] === 'DESC',\n                        'fas fa-sort-up': query[QUERY.CATEGORY] === 'ASC',\n                      },\n                    )}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              User\n\n              <a\n                href=\"#/\"\n                onClick={() => setQuery(() => {\n                  if (query[QUERY.USER] === 'DESC') {\n                    return {};\n                  }\n\n                  return ({\n                    [QUERY.USER]: query[QUERY.USER] ? 'DESC' : 'ASC',\n                  });\n                })}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn(\n                      'fas',\n                      {\n                        'fas fa-sort': !query[QUERY.USER],\n                        'fas fa-sort-down': query[QUERY.USER] === 'DESC',\n                        'fas fa-sort-up': query[QUERY.USER] === 'ASC',\n                      },\n                    )}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedProducts.map(product => (\n          <tr\n            data-cy=\"Product\"\n            key={product.id}\n          >\n            <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n              {product.id}\n            </td>\n\n            <td data-cy=\"ProductName\">\n              {product.name}\n            </td>\n            <td data-cy=\"ProductCategory\">\n              {`${product.category.icon} - ${product.category.title}`}\n            </td>\n\n            <td\n              data-cy=\"ProductUser\"\n              className={product.user.sex === 'm'\n                ? 'has-text-link'\n                : 'has-text-danger'\n              }\n            >\n              {product.user.name}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\nimport { Table } from './components';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst productsPrepared = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(cat => product.categoryId === cat.id);\n  const user = usersFromServer\n    .find(person => category.ownerId === person.id);\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nconst productFilter = (\n  products,\n  selectedUserId,\n  inputValue,\n  setSelectedCategories,\n) => {\n  let filteredProducts = structuredClone(products);\n\n  if (selectedUserId) {\n    filteredProducts = filteredProducts\n      .filter(product => product.user.id === selectedUserId);\n  }\n\n  if (inputValue) {\n    const lowerInputValue = inputValue.toLowerCase().trim();\n\n    filteredProducts = filteredProducts.filter((product) => {\n      const title = product.name.toLowerCase();\n\n      if (title.includes(lowerInputValue)) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  if (setSelectedCategories.length !== 0) {\n    filteredProducts = filteredProducts\n      .filter(product => setSelectedCategories.includes(product.category.id));\n  }\n\n  return filteredProducts;\n};\n\nexport const App = () => {\n  const [selectedUserId, setselectedUserId] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [query, setQuery] = useState({});\n\n  const productsToRender = productFilter(\n    productsPrepared,\n    selectedUserId,\n    inputValue,\n    selectedCategories,\n  );\n\n  const resetAllFilters = () => {\n    setselectedUserId(null);\n    setInputValue('');\n    setSelectedCategories([]);\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={cn({ 'is-active': !selectedUserId })}\n                onClick={() => setselectedUserId(null)}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  key={user.id}\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  className={cn({ 'is-active': user.id === selectedUserId })}\n                  onClick={() => setselectedUserId(user.id)}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={inputValue}\n                  onChange={({ target }) => setInputValue(target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                <span className=\"icon is-right\">\n                  {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                  {inputValue && (\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setInputValue('')}\n                    />\n                  )}\n                </span>\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={cn(\n                  'button',\n                  'is-success',\n                  'mr-6',\n                  { 'is-outlined': selectedCategories.length !== 0 },\n                )}\n                onClick={() => setSelectedCategories([])}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  data-cy=\"Category\"\n                  key={category.id}\n                  href=\"#/\"\n                  className={cn(\n                    'button',\n                    'mr-2',\n                    'mr-1',\n                    { 'is-info': selectedCategories.includes(category.id) },\n                  )}\n                  onClick={() => setSelectedCategories(() => {\n                    if (selectedCategories.includes(category.id)) {\n                      return selectedCategories.filter(catId => catId\n                        !== category.id);\n                    }\n\n                    return [...selectedCategories, category.id];\n                  })}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => resetAllFilters()}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {productsToRender.length === 0\n            ? (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            ) : (\n              <Table\n                products={productsToRender}\n                query={query}\n                setQuery={setQuery}\n              />\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}